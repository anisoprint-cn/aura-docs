(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{489:function(t,s,a){t.exports=a.p+"assets/img/transformations.8843c172.png"},490:function(t,s,a){t.exports=a.p+"assets/img/layuprule.856417f4.png"},491:function(t,s,a){t.exports=a.p+"assets/img/maskrule.cad09f1d.png"},536:function(t,s,a){"use strict";a.r(s);var e=a(42),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"aura-cli"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#aura-cli"}},[t._v("#")]),t._v(" Aura CLI "),e("Badge",{attrs:{text:"premium",type:"premium"}}),e("Badge",{attrs:{text:"open",type:"open"}})],1),t._v(" "),e("p",[t._v("Aura.CLI can be used if you have Aura.OPEN license with Premium features enabled.")]),t._v(" "),e("p",[t._v("Beta version of Aura CLI is included in Aura 2.1 and later. Aura.CLI.exe is located in the Aura program directory.")]),t._v(" "),e("h2",{attrs:{id:"usage"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#usage"}},[t._v("#")]),t._v(" Usage")]),t._v(" "),e("p",[t._v("Generate g-code for model:"),e("br"),t._v(" "),e("code",[t._v("aura.cli --center --models part.stl --output part.gcode --session settings.aus.json")]),e("br"),t._v("\nGenerate g-code for several models:"),e("br"),t._v(" "),e("code",[t._v("aura.cli --models part.stl part2.stp --output part.gcode --session settings.aus.json")]),e("br"),t._v("\nGenerate g-code with custom layup rules for parts:"),e("br"),t._v(" "),e("code",[t._v("aura.cli --input parts-data.json --output part.gcode --session settings.aus.json")])]),t._v(" "),e("p",[t._v("Session file includes profile, printer and materials settings. Use "),e("em",[t._v("File->Export session...")]),t._v(" in Aura to save session file with current slicing settings.\nSession file has JSON format.")]),t._v(" "),e("h2",{attrs:{id:"parameters"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#parameters"}},[t._v("#")]),t._v(" Parameters")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Parameter")]),t._v(" "),e("th",[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("-m, --models")]),t._v(" "),e("td",[t._v("(Group: parts) Model files to slice, several filenames should be separated by spaces.")])]),t._v(" "),e("tr",[e("td",[t._v("-i, --input")]),t._v(" "),e("td",[t._v("(Group: parts) Input data file with information about models and layups in JSON format.")])]),t._v(" "),e("tr",[e("td",[t._v("-s, --session")]),t._v(" "),e("td",[t._v("Required. Session file with slicing settings in JSON format.")])]),t._v(" "),e("tr",[e("td",[t._v("-o, --output")]),t._v(" "),e("td",[t._v("Required. Output file.")])]),t._v(" "),e("tr",[e("td",[t._v("-c, --center")]),t._v(" "),e("td",[t._v("In case of single part put it to the center of the buildplate.")])]),t._v(" "),e("tr",[e("td",[t._v("-f, --force")]),t._v(" "),e("td",[t._v("Overwrite existing output file.")])]),t._v(" "),e("tr",[e("td",[t._v("--help")]),t._v(" "),e("td",[t._v("Display help screen.")])]),t._v(" "),e("tr",[e("td",[t._v("--version")]),t._v(" "),e("td",[t._v("Display version information.")])])])]),t._v(" "),e("h2",{attrs:{id:"json-input-format"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#json-input-format"}},[t._v("#")]),t._v(" Json input format")]),t._v(" "),e("p",[t._v("You can specify a list of models with layup regions and transformations using "),e("em",[t._v("--input")]),t._v(" parameter.\nThe JSON Schema for the input file can be found in "),e("em",[t._v("cli-inputfile.schema.json")]),t._v(", which is located in the Aura program directory.")]),t._v(" "),e("p",[t._v("The JSON file should containd an array of models. For each model the path to model file should be specified. Also, a transformation (translation, rotation, etc) can be set for the model to position it on the buildplate.")]),t._v(" "),e("p",[e("img",{attrs:{src:a(489),alt:"Input JSON Schema: Models and trandformations"}})]),t._v(" "),e("p",[t._v("Optionally, each part can include custom part structure parameters for the different layers of the part (Layup Rules)")]),t._v(" "),e("p",[e("img",{attrs:{src:a(490),alt:"Input JSON Schema: Layup Rules"}})]),t._v(" "),e("p",[t._v("As an alternative, each part can include masks. If the input file contains both masks and layup rules, only masks will be used.")]),t._v(" "),e("p",[e("img",{attrs:{src:a(491),alt:"Input JSON Schema: Masks"}})]),t._v(" "),e("h3",{attrs:{id:"example"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#example"}},[t._v("#")]),t._v(" Example")]),t._v(" "),e("p",[t._v("Load two models and rotate and place them on the buildplate")]),t._v(" "),e("div",{staticClass:"language-json extra-class"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Models"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" \n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Filepath"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"spool-axis.stp"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Transformation"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Rotation"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"AxisVector"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"X"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Y"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Z"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"AngleRadians"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.57075")]),t._v("\n                "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Translation"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"X"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("150")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Y"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("\n                "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Filepath"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"spool-axis.stp"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Transformation"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Rotation"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"AxisVector"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"X"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Y"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Z"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"AngleRadians"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.57075")]),t._v("\n                "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Translation"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"X"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Y"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("\n                "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h3",{attrs:{id:"fiber-infill-types"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fiber-infill-types"}},[t._v("#")]),t._v(" Fiber infill types")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Value")]),t._v(" "),e("th",[t._v("Type")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("SOLID")])]),t._v(" "),e("tr",[e("td",[t._v("1")]),t._v(" "),e("td",[t._v("CELLULAR_RHOMBIC")])]),t._v(" "),e("tr",[e("td",[t._v("2")]),t._v(" "),e("td",[t._v("CELLULAR_ISOGRID")])]),t._v(" "),e("tr",[e("td",[t._v("3")]),t._v(" "),e("td",[t._v("CELLULAR_ANISOGRID")])])])]),t._v(" "),e("h3",{attrs:{id:"cellular-infill-types"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cellular-infill-types"}},[t._v("#")]),t._v(" Cellular infill types")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Value")]),t._v(" "),e("th",[t._v("Type")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("LINE")])]),t._v(" "),e("tr",[e("td",[t._v("1")]),t._v(" "),e("td",[t._v("GRID")])]),t._v(" "),e("tr",[e("td",[t._v("2")]),t._v(" "),e("td",[t._v("TRIANGLES")])]),t._v(" "),e("tr",[e("td",[t._v("3")]),t._v(" "),e("td",[t._v("ZIGZAG")])])])])])}),[],!1,null,null,null);s.default=r.exports}}]);